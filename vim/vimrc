" Specify a directory for plugins (for Neovim: ~/.local/share/nvim/plugged)
call plug#begin('~/.vim/plugged')

" Plugins
Plug 'https://github.com/vim-scripts/Conque-Shell.git'
Plug 'https://github.com/preservim/nerdtree.git'
" Plug 'Xuyuanp/nerdtree-git-plugin'
" Plug 'https://github.com/vim-syntastic/syntastic.git'
Plug 'git://github.com/tpope/vim-fugitive.git'
Plug 'git://github.com/airblade/vim-gitgutter.git'
Plug 'https://github.com/elzr/vim-json.git'
Plug 'https://github.com/jistr/vim-nerdtree-tabs.git'
Plug 'https://github.com/christoomey/vim-tmux-navigator.git'
Plug 'https://github.com/posva/vim-vue.git'
" Plug 'https://github.com/okcompute/vim-python-motions.git'
Plug 'https://github.com/chrisbra/csv.vim.git'
Plug 'https://github.com/davidhalter/jedi-vim.git'
Plug 'editorconfig/editorconfig-vim'
Plug 'https://github.com/tomlion/vim-solidity.git'
Plug 'https://github.com/kballard/vim-swift.git'
Plug 'https://github.com/dense-analysis/ale.git'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'udalov/kotlin-vim'
Plug 'rnestler/michelson.vim'
" Plug 'sjurgemeyer/vimport'
Plug 'https://github.com/dkprice/vim-easygrep'
Plug 'https://github.com/tpope/vim-obsession'
Plug 'https://github.com/jamessan/vim-gnupg'

" Vim python lsp
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'ryanolsonx/vim-lsp-python'
" Plug 'zxqfl/tabnine-vim'
Plug 'https://github.com/github/copilot.vim.git'

" Plug 'vim-airline/vim-airline'

" https://github.com/roxma/vim-tmux-clipboard
" https://www.reddit.com/r/vim/comments/7tt4ts/painless_copy_paste_between_tmux_vim_and_system/dtgwdbk/
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'https://github.com/roxma/vim-tmux-clipboard.git'

Plug 'psf/black', { 'branch': '22.3.0' }

call plug#end()

" Black
let g:black_virtualenv = "~/dotfiles/vim/pyvenv/black"
autocmd BufWritePost *.py silent! execute ':Black'

" Fugitive
call pathogen#infect()
call pathogen#helptags()

" By default use 4 spaces
set shiftwidth=4
set ts=4
set expandtab
set term=builtin_ansi

" Use 2 spaces for html and js
autocmd Filetype html setlocal ts=2 sw=2 expandtab
autocmd Filetype scss setlocal ts=2 sw=2 expandtab
autocmd Filetype javascript setlocal ts=2 sw=2 expandtab
autocmd Filetype vue setlocal ts=2 sw=2 expandtab
autocmd Filetype yaml setlocal ts=2 sw=2 expandtab

filetype plugin indent on
syntax on
set background=dark
colorscheme monokai
let mapleader = ','

" Nerdtree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

map <C-n> :NERDTreeToggle<CR>
map <Leader>n <plug>NERDTreeTabsToggle<CR>

let g:nerdtree_tabs_open_on_console_startup=1

set statusline=%f\ %{fugitive#statusline()}
set mouse=a
set ttymouse=xterm2
set number
let NERDTreeIgnore = ['__pycache__', '\.pyc$']
set splitright
set clipboard=unnamedplus

" Map function keys to tabs
map <Esc>OP :tabn1<CR>
map <Esc>OQ :tabn2<CR>
map <Esc>OR :tabn3<CR>
map <Esc>OS :tabn4<CR>
map <Esc>[15~ :tabn5<CR>
map <Esc>[17~ :tabn6<CR>
map <Esc>[18~ :tabn7<CR>
map <Esc>[19~ :tabn8<CR>
map <Esc>[20~ :tabn9<CR>
map <Esc>[21~ :tabn10<CR>
map <Esc>[23~ :tabn11<CR>
map <Esc>[24~ :tabn12<CR>
map ¡ :tabmove 0<CR>
map ™ :tabmove 1<CR>
map £ :tabmove 2<CR>
map ¢ :tabmove 3<CR>

" Blank current pane
command B bp|sp|bn|bd

" Syntastic python3 (disabled)
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1
let g:syntastic_python_python_exec = '/Library/Frameworks/Python.framework/Versions/3.5/bin/python3'
let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_args='--ignore=E501,E225'
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = 'npm run eslint --'
" let g:syntastic_kotlin_checkers = ['kotlinc']
let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"
" Kotlin
let g:syntastic_kotlin_kotlinc_config_file_enabled=1

" Ale (replacement for Syntastic)
let g:ale_completion_enabled = 1
let g:ale_python_flake8_args="--ignore=E501,E225"
let g:ale_python_mypy_options="--ignore-missing-imports"
let g:ale_linters = {'python': ['pylint'], 'javascript': ['eslint'], 'javascriptreact': ['eslint']}
let g:ale_fixers = {'*': ['remove_trailing_lines', 'trim_whitespace'], 'javascript': ['eslint'], 'python': ['black']}
let g:ale_fix_on_save = 1

" Vimport
let g:vimport_lookup_gradle_classpath = 1

" Allow swapping of panes via ,mw and ,pw
function! MarkWindowSwap()
    let g:markedWinNum = winnr()
endfunction

function! DoWindowSwap()
    "Mark destination
    let curNum = winnr()
    let curBuf = bufnr( "%" )
    exe g:markedWinNum . "wincmd w"
    "Switch to source and shuffle dest->source
    let markedBuf = bufnr( "%" )
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' curBuf
    "Switch to dest and shuffle source->dest
    exe curNum . "wincmd w"
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' markedBuf
endfunction

map <leader>mw :call MarkWindowSwap()<CR>
map <leader>pw :call DoWindowSwap()<CR>
vnoremap <leader>64 c<c-r>=system('base64',@")<cr><esc>
vnoremap <leader>64d c<c-r>=system('base64 --decode',@")<cr><esc>

command Term ConqueTerm bash
set backspace=indent,eol,start
set nowrap

" Remap control-w-j moves to control-j
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Fix weird colorness in vim when using tmux
set t_ut=

" Make mouse work properly beyond column 220
if has("mouse_sgr")
    set ttymouse=sgr
else
    set ttymouse=xterm2
end

set tags=./tags;,tags;

" autocmd Filetype javascript setlocal ts=4 sw=4 sts=0 noexpandtab
autocmd BufNewFile,BufRead *.leaf set ft=json

" JSON
nmap =j :%!python -m json.tool<CR>
set foldmethod=syntax
set foldlevel=99

nmap <C-W>! <Plug>Kwbd

" Put swapfiles in a central location
set swapfile
set dir=~/.tmp

" ,y -> copy current filename and line number to clipboard
nnoremap <leader>y :let @+=expand("%") . ':' . line(".")<CR>

" Python lsp
let g:lsp_diagnostics_enabled = 0

let g:copilot_filetypes = {
\    '*': v:false,
\    'python': v:true,
\}
